apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: "2024-01-17T16:04:33Z"
  generation: 1
  name: mongo-replicaset
  namespace: nirmata
  ownerReferences:
  - apiVersion: mongodbcommunity.mongodb.com/v1
    blockOwnerDeletion: true
    controller: true
    kind: MongoDBCommunity
    name: mongo-replicaset
    uid: f7ae444f-5615-47d8-9cdd-2de51b2425a3
  resourceVersion: "1725223"
  uid: 0ad8d223-cbbd-415a-96fb-74a0b6fd77b8
spec:
  podManagementPolicy: OrderedReady
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: mongo-replicaset-svc
  serviceName: mongo-replicaset-svc
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: mongo-replicaset-svc
    spec:
      containers:
      - args:
        - ""
        command:
        - /bin/sh
        - -c
        - |2+

          #run post-start hook to handle version changes
          /hooks/version-upgrade

          # wait for config and keyfile to be created by the agent
           while ! [ -f /data/automation-mongod.conf -a -f /var/lib/mongodb-mms-automation/authentication/keyfile ]; do sleep 3 ; done ; sleep 2 ;

          # start mongod with this configuration
          exec mongod -f /data/automation-mongod.conf;

        env:
        - name: AGENT_STATUS_FILEPATH
          value: /healthstatus/agent-health-status.json
        image: docker.io/mongo:5.0.15
        imagePullPolicy: IfNotPresent
        name: mongod
        resources:
          limits:
            cpu: "1"
            memory: 500M
          requests:
            cpu: 500m
            memory: 400M
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /data
          name: data-volume
        - mountPath: /healthstatus
          name: healthstatus
        - mountPath: /hooks
          name: hooks
        - mountPath: /var/log/mongodb-mms-automation
          name: logs-volume
        - mountPath: /var/lib/mongodb-mms-automation/authentication
          name: mongo-replicaset-keyfile
        - mountPath: /var/lib/tls/ca/
          name: tls-ca
          readOnly: true
        - mountPath: /var/lib/tls/server/
          name: tls-secret
          readOnly: true
        - mountPath: /tmp
          name: tmp
      - command:
        - /bin/bash
        - -c
        - |-
          current_uid=$(id -u)
          AGENT_API_KEY="$(cat /mongodb-automation/agent-api-key/agentApiKey)"
          declare -r current_uid
          if ! grep -q "${current_uid}" /etc/passwd ; then
          sed -e "s/^mongodb:/builder:/" /etc/passwd > /tmp/passwd
          echo "mongodb:x:$(id -u):$(id -g):,,,:/:/bin/bash" >> /tmp/passwd
          export NSS_WRAPPER_PASSWD=/tmp/passwd
          export LD_PRELOAD=libnss_wrapper.so
          export NSS_WRAPPER_GROUP=/etc/group
          fi
          agent/mongodb-agent -healthCheckFilePath=/var/log/mongodb-mms-automation/healthstatus/agent-health-status.json -serveStatusPort=5000 -cluster=/var/lib/automation/config/cluster-config.json -skipMongoStart -noDaemonize -useLocalMongoDbTools -logFile ${AGENT_LOG_FILE} -maxLogFileDurationHrs ${AGENT_MAX_LOG_FILE_DURATION_HOURS} -logLevel ${AGENT_LOG_LEVEL}
        env:
        - name: AGENT_LOG_FILE
          value: /var/log/mongodb-mms-automation/automation-agent.log
        - name: AGENT_LOG_LEVEL
          value: INFO
        - name: AGENT_MAX_LOG_FILE_DURATION_HOURS
          value: "24"
        - name: AGENT_STATUS_FILEPATH
          value: /var/log/mongodb-mms-automation/healthstatus/agent-health-status.json
        - name: AUTOMATION_CONFIG_MAP
          value: mongo-replicaset-config
        - name: HEADLESS_AGENT
          value: "true"
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: quay.io/mongodb/mongodb-agent:107.0.0.8465-1
        imagePullPolicy: Always
        name: mongodb-agent
        readinessProbe:
          exec:
            command:
            - /opt/scripts/readinessprobe
          failureThreshold: 40
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: "1"
            memory: 500M
          requests:
            cpu: 500m
            memory: 400M
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /opt/scripts
          name: agent-scripts
        - mountPath: /var/lib/automation/config
          name: automation-config
          readOnly: true
        - mountPath: /data
          name: data-volume
        - mountPath: /var/log/mongodb-mms-automation/healthstatus
          name: healthstatus
        - mountPath: /var/log/mongodb-mms-automation
          name: logs-volume
        - mountPath: /var/lib/mongodb-mms-automation/authentication
          name: mongo-replicaset-keyfile
        - mountPath: /var/lib/tls/ca/
          name: tls-ca
          readOnly: true
        - mountPath: /var/lib/tls/server/
          name: tls-secret
          readOnly: true
        - mountPath: /tmp
          name: tmp
      dnsPolicy: ClusterFirst
      initContainers:
      - command:
        - cp
        - version-upgrade-hook
        - /hooks/version-upgrade
        image: quay.io/mongodb/mongodb-kubernetes-operator-version-upgrade-post-start-hook:1.0.8
        imagePullPolicy: Always
        name: mongod-posthook
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /hooks
          name: hooks
      - command:
        - cp
        - /probes/readinessprobe
        - /opt/scripts/readinessprobe
        image: quay.io/mongodb/mongodb-kubernetes-readinessprobe:1.0.17
        imagePullPolicy: Always
        name: mongodb-agent-readinessprobe
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /opt/scripts
          name: agent-scripts
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 2000
        runAsNonRoot: true
        runAsUser: 2000
      serviceAccount: mongodb-database
      serviceAccountName: mongodb-database
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: agent-scripts
      - name: automation-config
        secret:
          defaultMode: 416
          secretName: mongo-replicaset-config
      - emptyDir: {}
        name: healthstatus
      - emptyDir: {}
        name: hooks
      - emptyDir: {}
        name: mongo-replicaset-keyfile
      - name: tls-ca
        secret:
          defaultMode: 416
          secretName: mongo-replicaset-ca-certificate
      - name: tls-secret
        secret:
          defaultMode: 416
          secretName: mongo-replicaset-server-certificate-key
      - emptyDir: {}
        name: tmp
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      name: data-volume
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 50Gi
      storageClassName: managed-csi
      volumeMode: Filesystem
    status:
      phase: Pending
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      name: logs-volume
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 2G
      volumeMode: Filesystem
    status:
      phase: Pending
status:
  availableReplicas: 0
  collisionCount: 0
  currentReplicas: 1
  currentRevision: mongo-replicaset-7855764b58
  observedGeneration: 1
  replicas: 1
  updateRevision: mongo-replicaset-7855764b58
  updatedReplicas: 1
